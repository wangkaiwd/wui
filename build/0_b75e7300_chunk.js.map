{"version":3,"file":"0_b75e7300_chunk.js","sources":["webpack://WUI/./lib/components/button/button.tsx"],"sourcesContent":["import React from 'react';\nimport classes, { classMaker } from '../../helpers/classes';\nimport './button.scss';\nimport Icon from '../icon/icon';\n\ninterface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  color?: 'default' | 'primary' | 'danger';\n  disabled?: boolean;\n  shape?: 'circle' | 'text' | 'outline' | 'contained';\n  icon?: string\n}\n\nconst sc = classMaker('button');\n// 要注意： 这里通过泛型<>的形式传入和 为props指定接口：props:Props 有什么区别\nconst Button: React.FC<Props> = (props) => {\n  const { className, color, icon, shape, disabled = false, ...restProps } = props;\n  return (\n    <button\n      className={classes(sc('', color, shape, { disabled }), className)}\n      {...restProps}\n    >\n      {icon && <Icon className={sc('left-icon')} name={icon}/>} {props.children}\n    </button>\n  );\n};\nButton.defaultProps = {\n  color: 'default',\n  // 又碰到了默认值不生效的问题\n  disabled: false,\n  shape: 'contained'\n};\nexport default Button;\n"],"mappings":"AAYA","sourceRoot":""}